From 48edb960daa7a85f2c6fb74815a632bb173131cd Mon Sep 17 00:00:00 2001
From: torvic9 <torvic9@mailbox.org>
Date: Mon, 2 Dec 2019 10:59:12 +0100
Subject: [PATCH] tune vm writeback and page readahead

Signed-off-by: torvic9 <torvic9@mailbox.org>
---
 include/linux/mm.h  | 2 +-
 mm/page-writeback.c | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/include/linux/mm.h b/include/linux/mm.h
index a2adf95b3f9c..d7823ee21744 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -2414,11 +2414,11 @@ extern vm_fault_t filemap_page_mkwrite(struct vm_fault *vmf);
 /* mm/page-writeback.c */
 int __must_check write_one_page(struct page *page);
 void task_dirty_inc(struct task_struct *tsk);
 
 /* readahead.c */
-#define VM_READAHEAD_PAGES	(SZ_128K / PAGE_SIZE)
+#define VM_READAHEAD_PAGES	(SZ_512K / PAGE_SIZE)
 
 int force_page_cache_readahead(struct address_space *mapping, struct file *filp,
 			pgoff_t offset, unsigned long nr_to_read);
 
 void page_cache_sync_readahead(struct address_space *mapping,
diff --git a/mm/page-writeback.c b/mm/page-writeback.c
index 50055d2e4ea8..9d800356f77a 100644
--- a/mm/page-writeback.c
+++ b/mm/page-writeback.c
@@ -69,11 +69,11 @@ static long ratelimit_pages = 32;
 /* The following parameters are exported via /proc/sys/vm */
 
 /*
  * Start background writeback (via writeback threads) at this percentage
  */
-int dirty_background_ratio = 10;
+int dirty_background_ratio = 5;
 
 /*
  * dirty_background_bytes starts at 0 (disabled) so that it is a function of
  * dirty_background_ratio * the amount of dirtyable memory
  */
@@ -86,22 +86,22 @@ unsigned long dirty_background_bytes;
 int vm_highmem_is_dirtyable;
 
 /*
  * The generator of dirty data starts writeback at this percentage
  */
-int vm_dirty_ratio = 20;
+int vm_dirty_ratio = 15;
 
 /*
  * vm_dirty_bytes starts at 0 (disabled) so that it is a function of
  * vm_dirty_ratio * the amount of dirtyable memory
  */
 unsigned long vm_dirty_bytes;
 
 /*
  * The interval between `kupdate'-style writebacks
  */
-unsigned int dirty_writeback_interval = 5 * 100; /* centiseconds */
+unsigned int dirty_writeback_interval = 15 * 100; /* centiseconds */
 
 EXPORT_SYMBOL_GPL(dirty_writeback_interval);
 
 /*
  * The longest time for which data is allowed to remain dirty
-- 
2.24.0

